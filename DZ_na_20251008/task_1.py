print("Напишите декоратор @uppercase, который будет преобразовывать возвращаемую строковую значение декорируемой функции к верхнему регистру.")

# Создаем декоратор, который преобразует возвращаемое строковое значение
# декорируемой функции к верхнему регистру.
def uppercase(func):
    # Создаем функцию-обертку.
    def wrapper(*args, **kwargs):
        # Вызываем исходную функцию с переданными аргументами
        result = func(*args, **kwargs)
        # Преобразуем результат к верхнему регистру и возвращаем
        return result.upper()

    # Возвращаем функцию-обертку вместо исходной функции.
    return wrapper


# Применяем декоратор @uppercase к функции "say_hello".
# При вызове say_hello() будет выполнена wrapper() из декоратора,
# которая вызовет исходную say_hello() и преобразует результат к верхнему регистру.
@uppercase
def say_hello():
    return "hello, world!"

# Вызываем функцию "say_hello()".
print()
print(say_hello())
